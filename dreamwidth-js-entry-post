#!/usr/bin/env node
'use strict';

let fs = require('fs')

let program = require('commander')

let common = require('./lib/common')
let dw = require('./lib/dreamwidth')

program
    .version('0.0.1')
    .usage('[options] < file.html')
    .option('-n, --netrc <string>', 'a path to a .netrc')
    .option('-s, --subject <string>', 'entry title')
    .option('-d, --date <string>', 'date in YYYY-MM-DD HH:MM format', function(val) {
	this.val = new Date(Date.parse(val))
    })
    .option('-t, --tags <string>', 'tags separated by commas')
    .option('--backdated', "don't show up on people's friends lists")
    .option('--security <string>', 'private, public')
    .parse(process.argv)


let cridentials = common.cridentials(program.netrc)
let input = fs.readFileSync('/dev/stdin').toString()
if (input.trim().length === 0) common.errx('invalid input')

let journal = new dw.Dreamwidth(cridentials.login, cridentials.password)
process.exit(111)

journal.login().then( () => {
}).then( () => {
    return journal.entry_post('test', new Date(Date.parse('2020-12-31 14:44')),
			      'omglol1, omg lol2',
			      "hello\n\n\n\n<b>world</d>", {
				  opt_backdated: true
			      })
}).then( val => {
    console.log(val)
}).catch( err => {
    common.err_abort(err)
})
